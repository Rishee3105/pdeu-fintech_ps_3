// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum TransactionStatus {
  Pending
  Accepted
  Rejected
}

model Company {
  id            Int          @id @default(autoincrement())
  name          String
  email         String       @unique
  phone         String?
  address       String?
  gstNumber     String       @unique @map("gst_number")
  createdAt     DateTime     @default(now()) @map("created_at")
  transactions  Transaction[]

  @@map("companies")
}

model Transaction {
  id                Int                @id @default(autoincrement())
  company           Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId         Int                @map("company_id")
  sourceCountry     String             @map("source_country")
  sourceState       String             @map("source_state")
  destCountry       String             @map("dest_country")
  destState         String             @map("dest_state")
  actualCost        Decimal            @map("actual_cost")
  costWithTax       Decimal            @map("cost_with_tax")
  realCostWithTax   Decimal?           @map("real_cost_with_tax") // New column
  transactionDate   DateTime           @map("transaction_date")
  status            TransactionStatus? @default(Pending)          // Default value is Pending
  createdAt         DateTime           @default(now())            @map("created_at")

  @@map("transactions")
}